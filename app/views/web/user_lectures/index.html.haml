.pagetitle
  .layout-line
    %h1.pagetitle__title= t '.events20'
    %h5
      = t('.user_lectures_title_before_link')
      = succeed ',' do
        = link_to t(".user_lectures_title_link"), 'mailto:info@nastachku.ru'
      = t('.user_lectures_title_after_link')
    %br

    .row.workshop
      .span9
        - if @lectures.empty?
          = t(".not_added_yet")
          = link_to t(".first_speaker"), 'mailto:info@nastachku.ru'
          %br
          %br
        - else
          #{ t '.sort_by' }:&nbsp;
          -#FIXME решение в лоб. Наверняка есть более элегантное решение
          = sort_clink(@search, :lecture_votings_count, t('.by_lecture_votings_count'), {default_order: :desc, workshop_id_eq: params[:workshop_id_eq] })
          &nbsp;&nbsp;
          = sort_clink(@search, :created_at, t('.by_created_at'), { workshop_id_eq: params[:workshop_id_eq] })
          %br
          %br

          - @lectures.each do |lecture|
            .row-fluid.event-item
              .span4.sinfo
                .col-l
                  %h5= lecture.user.decorate.full_name
                  %h6
                    %strong= lecture.user.company
                  .pic
                    = image_tag lecture.user.decorate.user_pic
                  .buttons-group.lectures20
                    - if signed_in?
                      - voted_link_attrs = (lecture.lecture_votings.voted_by?(current_user)) ?  {class: "vote-link action-unvote", method: "delete"} : {class: "vote-link action-vote", method: "post"}
                      = link_to api_lecture_lecture_votings_path(lecture), class: voted_link_attrs[:class], remote: true, method: voted_link_attrs[:method] do
                        %span.btn.btn-state.btn-vote.btn-shine= t('.vote_this_lecture')
                        %span.btn.btn-state.btn-vote-hover.btn-shine= t('.vote_this_lecture')
                        %span.btn.btn-state.btn-pending.btn-no-clickable= t('.pending')
                        %span.btn.btn-state.btn-unvote= t('.already_voted')
                        %span.btn.btn-state.btn-unvote-hover= t('.unvote')
                    -else
                      %span.btn.btn-no-clickable.vote-tooltip{title: "#{t('.auth_for_vote')}", data: {toggle: 'tooltip'}}
                        = t('.they_voted')

                        %span.btn.votings-count.btn-no-clickable
                          = lecture.lecture_votings.size
              .span8
                %h4= lecture.title
                %p.ainfo= nl2br lecture.thesises
              .clearfix
